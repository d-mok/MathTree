import { BasicCanvas } from './basic_canvas';
declare type px = number;
declare type dot = [px, px];
declare type Point2D = [number, number];
declare type Point3D = [number, number, number];
declare type Point = Point2D | Point3D;
export declare function sin(degree: number): number;
export declare function cos(degree: number): number;
export declare function vec(p1: Point2D, p2: Point2D): Point2D;
export declare function cross2D(vec1: Point2D, vec2: Point2D): number;
export declare class Convas extends BasicCanvas {
    protected translateTo(pt: Point): void;
    protected rotate(degreePolar: number): void;
    protected rotateTo(start: Point, end: Point): void;
    protected alignTo(start: Point, end: Point): void;
    protected moveToPx([x, y]: dot): void;
    protected lineToPx([x, y]: dot): void;
    protected createPathPx(dots: dot[]): void;
    protected createShapePx(dots: dot[]): void;
    protected moveTo(pt: Point): void;
    protected lineTo(pt: Point): void;
    protected createPath(pts: Point[]): void;
    protected createShape(pts: Point[]): void;
    protected createArc(center: Point, radius: px, angle: [number, number]): void;
    protected createArcByPoints(P: Point, O: Point, Q: Point, radius: px): void;
    protected createRightAnglePath(P: Point, O: Point, Q: Point, size: px): void;
    protected doStroke(): void;
    protected doSolid(): void;
    protected doDash(): void;
    protected doFill(): void;
    protected doShade(): void;
    private plainPx;
    private latexPx;
    private textPx;
    text(text: string, point: Point, offset: dot): void;
    textDodge(text: string, point: Point, radius: px, dodge: number): void;
    private plainSemi;
    private latexSemi;
    private textSemi;
    getDir(start: Point, end: Point): number;
    getCenterDir(point: Point): number;
    getDirAngle(A: Point, O: Point, B: Point): number;
    getMidDir(A: Point, O: Point, B: Point): number;
    getLineDir(A: Point, B: Point): number;
    polarFlip(A: Point, O: Point, B: Point): boolean;
    unitize(text: string | number): string;
}
export {};
//# sourceMappingURL=convas.d.ts.map