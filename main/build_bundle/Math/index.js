// This file is auto-generated by expose.ts
import * as bundle from './bundle.js';
globalThis.ASTC = bundle.deepBlurize(bundle.ASTC);
globalThis.ASequence = bundle.deepBlurize(bundle.ASequence);
globalThis.ASsum = bundle.deepBlurize(bundle.ASsum);
globalThis.ASterm = bundle.deepBlurize(bundle.ASterm);
globalThis.Abs = bundle.deepBlurize(bundle.Abs);
globalThis.Angle = bundle.deepBlurize(bundle.Angle);
globalThis.AnglePolar = bundle.deepBlurize(bundle.AnglePolar);
globalThis.ArcLength = bundle.deepBlurize(bundle.ArcLength);
globalThis.AreAbsDistinct = bundle.deepBlurize(bundle.AreAbsDistinct);
globalThis.AreCoprime = bundle.deepBlurize(bundle.AreCoprime);
globalThis.AreDifferent = bundle.deepBlurize(bundle.AreDifferent);
globalThis.AreDistantPoint = bundle.deepBlurize(bundle.AreDistantPoint);
globalThis.AreDistinct = bundle.deepBlurize(bundle.AreDistinct);
globalThis.AreOblique = bundle.deepBlurize(bundle.AreOblique);
globalThis.AreSameSign = bundle.deepBlurize(bundle.AreSameSign);
globalThis.ArrangePoints = bundle.deepBlurize(bundle.ArrangePoints);
globalThis.At = bundle.deepBlurize(bundle.At);
globalThis.Bin = bundle.deepBlurize(bundle.Bin);
globalThis.Binomial = bundle.deepBlurize(bundle.Binomial);
globalThis.BuildAngle = bundle.deepBlurize(bundle.BuildAngle);
globalThis.BuildRatio = bundle.deepBlurize(bundle.BuildRatio);
globalThis.BuildSolve = bundle.deepBlurize(bundle.BuildSolve);
globalThis.BuildTrend = bundle.deepBlurize(bundle.BuildTrend);
globalThis.Ceil = bundle.deepBlurize(bundle.Ceil);
globalThis.Centroid = bundle.deepBlurize(bundle.Centroid);
globalThis.CheckVertices = bundle.deepBlurize(bundle.CheckVertices);
globalThis.ChessboardDistance = bundle.deepBlurize(bundle.ChessboardDistance);
globalThis.CircleFromGeneral = bundle.deepBlurize(bundle.CircleFromGeneral);
globalThis.CircleGeneral = bundle.deepBlurize(bundle.CircleGeneral);
globalThis.CircleLineIntersect = bundle.deepBlurize(bundle.CircleLineIntersect);
globalThis.CircleLinearIntersect = bundle.deepBlurize(bundle.CircleLinearIntersect);
globalThis.Circumcentre = bundle.deepBlurize(bundle.Circumcentre);
globalThis.ComboDisplay = bundle.deepBlurize(bundle.ComboDisplay);
globalThis.CompassBearing = bundle.deepBlurize(bundle.CompassBearing);
globalThis.ConstraintText = bundle.deepBlurize(bundle.ConstraintText);
globalThis.ConstraintsFromPoints = bundle.deepBlurize(bundle.ConstraintsFromPoints);
globalThis.Coord = bundle.deepBlurize(bundle.Coord);
globalThis.CosineLawAngle = bundle.deepBlurize(bundle.CosineLawAngle);
globalThis.CosineLawLength = bundle.deepBlurize(bundle.CosineLawLength);
globalThis.Crammer = bundle.deepBlurize(bundle.Crammer);
globalThis.Degree = bundle.deepBlurize(bundle.Degree);
globalThis.Dfrac = bundle.deepBlurize(bundle.Dfrac);
globalThis.Dir = bundle.deepBlurize(bundle.Dir);
globalThis.Discriminant = bundle.deepBlurize(bundle.Discriminant);
globalThis.Distance = bundle.deepBlurize(bundle.Distance);
globalThis.Divide = bundle.deepBlurize(bundle.Divide);
globalThis.Embed = bundle.deepBlurize(bundle.Embed);
globalThis.EmbedX = bundle.deepBlurize(bundle.EmbedX);
globalThis.EmbedY = bundle.deepBlurize(bundle.EmbedY);
globalThis.EmbedZ = bundle.deepBlurize(bundle.EmbedZ);
globalThis.ExplainTransforms = bundle.deepBlurize(bundle.ExplainTransforms);
globalThis.Extrude = bundle.deepBlurize(bundle.Extrude);
globalThis.Factorial = bundle.deepBlurize(bundle.Factorial);
globalThis.FeasibleIntegral = bundle.deepBlurize(bundle.FeasibleIntegral);
globalThis.FeasibleIsBounded = bundle.deepBlurize(bundle.FeasibleIsBounded);
globalThis.FeasiblePolygon = bundle.deepBlurize(bundle.FeasiblePolygon);
globalThis.FeasibleVertices = bundle.deepBlurize(bundle.FeasibleVertices);
globalThis.FieldAt = bundle.deepBlurize(bundle.FieldAt);
globalThis.Fix = bundle.deepBlurize(bundle.Fix);
globalThis.FixDown = bundle.deepBlurize(bundle.FixDown);
globalThis.FixUp = bundle.deepBlurize(bundle.FixUp);
globalThis.FlatZ = bundle.deepBlurize(bundle.FlatZ);
globalThis.Floor = bundle.deepBlurize(bundle.Floor);
globalThis.Flop = bundle.deepBlurize(bundle.Flop);
globalThis.Freq = bundle.deepBlurize(bundle.Freq);
globalThis.FreqTable = bundle.deepBlurize(bundle.FreqTable);
globalThis.Freqs = bundle.deepBlurize(bundle.Freqs);
globalThis.GSequence = bundle.deepBlurize(bundle.GSequence);
globalThis.GSsum = bundle.deepBlurize(bundle.GSsum);
globalThis.GSterm = bundle.deepBlurize(bundle.GSterm);
globalThis.GrammarJoin = bundle.deepBlurize(bundle.GrammarJoin);
globalThis.GroupCumFreqTable = bundle.deepBlurize(bundle.GroupCumFreqTable);
globalThis.GroupFreqTable = bundle.deepBlurize(bundle.GroupFreqTable);
globalThis.HCF = bundle.deepBlurize(bundle.HCF);
globalThis.HeightBySAS = bundle.deepBlurize(bundle.HeightBySAS);
globalThis.HeightBySSS = bundle.deepBlurize(bundle.HeightBySSS);
globalThis.HeightsBySAS = bundle.deepBlurize(bundle.HeightsBySAS);
globalThis.HeightsBySSS = bundle.deepBlurize(bundle.HeightsBySSS);
globalThis.Heron = bundle.deepBlurize(bundle.Heron);
globalThis.IQR = bundle.deepBlurize(bundle.IQR);
globalThis.Incentre = bundle.deepBlurize(bundle.Incentre);
globalThis.IndexToSurd = bundle.deepBlurize(bundle.IndexToSurd);
globalThis.IneqSign = bundle.deepBlurize(bundle.IneqSign);
globalThis.IntersectAngle = bundle.deepBlurize(bundle.IntersectAngle);
globalThis.Intersection = bundle.deepBlurize(bundle.Intersection);
globalThis.IsAbsBetween = bundle.deepBlurize(bundle.IsAbsBetween);
globalThis.IsAroundPoint = bundle.deepBlurize(bundle.IsAroundPoint);
globalThis.IsBetween = bundle.deepBlurize(bundle.IsBetween);
globalThis.IsConvexPolygon = bundle.deepBlurize(bundle.IsConvexPolygon);
globalThis.IsDecimal = bundle.deepBlurize(bundle.IsDecimal);
globalThis.IsEven = bundle.deepBlurize(bundle.IsEven);
globalThis.IsInteger = bundle.deepBlurize(bundle.IsInteger);
globalThis.IsNegative = bundle.deepBlurize(bundle.IsNegative);
globalThis.IsNonNegative = bundle.deepBlurize(bundle.IsNonNegative);
globalThis.IsNonNegativeInteger = bundle.deepBlurize(bundle.IsNonNegativeInteger);
globalThis.IsNonZero = bundle.deepBlurize(bundle.IsNonZero);
globalThis.IsNum = bundle.deepBlurize(bundle.IsNum);
globalThis.IsOdd = bundle.deepBlurize(bundle.IsOdd);
globalThis.IsPositive = bundle.deepBlurize(bundle.IsPositive);
globalThis.IsPositiveInteger = bundle.deepBlurize(bundle.IsPositiveInteger);
globalThis.IsProbability = bundle.deepBlurize(bundle.IsProbability);
globalThis.IsRational = bundle.deepBlurize(bundle.IsRational);
globalThis.IsReflex = bundle.deepBlurize(bundle.IsReflex);
globalThis.IsSquareNum = bundle.deepBlurize(bundle.IsSquareNum);
globalThis.IsTerminating = bundle.deepBlurize(bundle.IsTerminating);
globalThis.IsTriangle = bundle.deepBlurize(bundle.IsTriangle);
globalThis.LCM = bundle.deepBlurize(bundle.LCM);
globalThis.Lace = bundle.deepBlurize(bundle.Lace);
globalThis.LineFeat = bundle.deepBlurize(bundle.LineFeat);
globalThis.LineFromBisector = bundle.deepBlurize(bundle.LineFromBisector);
globalThis.LineFromIntercepts = bundle.deepBlurize(bundle.LineFromIntercepts);
globalThis.LineFromPointSlope = bundle.deepBlurize(bundle.LineFromPointSlope);
globalThis.LineFromTwoPoints = bundle.deepBlurize(bundle.LineFromTwoPoints);
globalThis.LinearFromBisector = bundle.deepBlurize(bundle.LinearFromBisector);
globalThis.LinearFromIntercepts = bundle.deepBlurize(bundle.LinearFromIntercepts);
globalThis.LinearFromPointSlope = bundle.deepBlurize(bundle.LinearFromPointSlope);
globalThis.LinearFromTwoPoints = bundle.deepBlurize(bundle.LinearFromTwoPoints);
globalThis.LongDivision = bundle.deepBlurize(bundle.LongDivision);
globalThis.LowerQ = bundle.deepBlurize(bundle.LowerQ);
globalThis.LowerQAt = bundle.deepBlurize(bundle.LowerQAt);
globalThis.LucasSequence = bundle.deepBlurize(bundle.LucasSequence);
globalThis.Max = bundle.deepBlurize(bundle.Max);
globalThis.MaximizeField = bundle.deepBlurize(bundle.MaximizeField);
globalThis.MaximizePoint = bundle.deepBlurize(bundle.MaximizePoint);
globalThis.Mean = bundle.deepBlurize(bundle.Mean);
globalThis.Median = bundle.deepBlurize(bundle.Median);
globalThis.MedianAt = bundle.deepBlurize(bundle.MedianAt);
globalThis.Mid = bundle.deepBlurize(bundle.Mid);
globalThis.Mid3D = bundle.deepBlurize(bundle.Mid3D);
globalThis.Min = bundle.deepBlurize(bundle.Min);
globalThis.MinimizeField = bundle.deepBlurize(bundle.MinimizeField);
globalThis.MinimizePoint = bundle.deepBlurize(bundle.MinimizePoint);
globalThis.Mode = bundle.deepBlurize(bundle.Mode);
globalThis.Move = bundle.deepBlurize(bundle.Move);
globalThis.MoveX = bundle.deepBlurize(bundle.MoveX);
globalThis.MoveY = bundle.deepBlurize(bundle.MoveY);
globalThis.OnCircle = bundle.deepBlurize(bundle.OnCircle);
globalThis.OptimizeField = bundle.deepBlurize(bundle.OptimizeField);
globalThis.OptimizePoint = bundle.deepBlurize(bundle.OptimizePoint);
globalThis.Orthocentre = bundle.deepBlurize(bundle.Orthocentre);
globalThis.PairTable = bundle.deepBlurize(bundle.PairTable);
globalThis.Partition = bundle.deepBlurize(bundle.Partition);
globalThis.PdFoot = bundle.deepBlurize(bundle.PdFoot);
globalThis.PdFoot3D = bundle.deepBlurize(bundle.PdFoot3D);
globalThis.PhyConst = bundle.PhyConst;
globalThis.PhyEq = bundle.PhyEq;
globalThis.PolToRect = bundle.deepBlurize(bundle.PolToRect);
globalThis.PolarDiff = bundle.deepBlurize(bundle.PolarDiff);
globalThis.PolarReduce = bundle.deepBlurize(bundle.PolarReduce);
globalThis.PolyFunction = bundle.deepBlurize(bundle.PolyFunction);
globalThis.PolyPrint = bundle.deepBlurize(bundle.PolyPrint);
globalThis.PolySimplify = bundle.deepBlurize(bundle.PolySimplify);
globalThis.PolySort = bundle.deepBlurize(bundle.PolySort);
globalThis.PrimeFactorize = bundle.deepBlurize(bundle.PrimeFactorize);
globalThis.PrimeFactors = bundle.deepBlurize(bundle.PrimeFactors);
globalThis.Product = bundle.deepBlurize(bundle.Product);
globalThis.Pyth = bundle.deepBlurize(bundle.Pyth);
globalThis.PythLeg = bundle.deepBlurize(bundle.PythLeg);
globalThis.Quadrant = bundle.deepBlurize(bundle.Quadrant);
globalThis.QuadraticFromRoot = bundle.deepBlurize(bundle.QuadraticFromRoot);
globalThis.QuadraticFromVertex = bundle.deepBlurize(bundle.QuadraticFromVertex);
globalThis.QuadraticRoot = bundle.deepBlurize(bundle.QuadraticRoot);
globalThis.QuadraticSequence = bundle.deepBlurize(bundle.QuadraticSequence);
globalThis.QuadraticVertex = bundle.deepBlurize(bundle.QuadraticVertex);
globalThis.Radian = bundle.deepBlurize(bundle.Radian);
globalThis.Ratio = bundle.deepBlurize(bundle.Ratio);
globalThis.RectToPol = bundle.deepBlurize(bundle.RectToPol);
globalThis.ReflectX = bundle.deepBlurize(bundle.ReflectX);
globalThis.ReflectY = bundle.deepBlurize(bundle.ReflectY);
globalThis.RegularPolygon = bundle.deepBlurize(bundle.RegularPolygon);
globalThis.RndAngles = bundle.deepBlurize(bundle.RndAngles);
globalThis.RndCapitals = bundle.deepBlurize(bundle.RndCapitals);
globalThis.RndComposite = bundle.deepBlurize(bundle.RndComposite);
globalThis.RndConvexPolygon = bundle.deepBlurize(bundle.RndConvexPolygon);
globalThis.RndData = bundle.deepBlurize(bundle.RndData);
globalThis.RndEven = bundle.deepBlurize(bundle.RndEven);
globalThis.RndHe = bundle.deepBlurize(bundle.RndHe);
globalThis.RndLetters = bundle.deepBlurize(bundle.RndLetters);
globalThis.RndN = bundle.deepBlurize(bundle.RndN);
globalThis.RndNs = bundle.deepBlurize(bundle.RndNs);
globalThis.RndOdd = bundle.deepBlurize(bundle.RndOdd);
globalThis.RndOnCircle = bundle.deepBlurize(bundle.RndOnCircle);
globalThis.RndP = bundle.deepBlurize(bundle.RndP);
globalThis.RndPartition = bundle.deepBlurize(bundle.RndPartition);
globalThis.RndPick = bundle.deepBlurize(bundle.RndPick);
globalThis.RndPickN = bundle.deepBlurize(bundle.RndPickN);
globalThis.RndPickUnique = bundle.deepBlurize(bundle.RndPickUnique);
globalThis.RndPoint = bundle.deepBlurize(bundle.RndPoint);
globalThis.RndPointPolar = bundle.deepBlurize(bundle.RndPointPolar);
globalThis.RndPoints = bundle.deepBlurize(bundle.RndPoints);
globalThis.RndPoly = bundle.deepBlurize(bundle.RndPoly);
globalThis.RndPolynomial = bundle.deepBlurize(bundle.RndPolynomial);
globalThis.RndPyth = bundle.deepBlurize(bundle.RndPyth);
globalThis.RndQ = bundle.deepBlurize(bundle.RndQ);
globalThis.RndQs = bundle.deepBlurize(bundle.RndQs);
globalThis.RndR = bundle.deepBlurize(bundle.RndR);
globalThis.RndRatio = bundle.deepBlurize(bundle.RndRatio);
globalThis.RndRs = bundle.deepBlurize(bundle.RndRs);
globalThis.RndShake = bundle.deepBlurize(bundle.RndShake);
globalThis.RndShakeBase = bundle.deepBlurize(bundle.RndShakeBase);
globalThis.RndShakeCombo = bundle.deepBlurize(bundle.RndShakeCombo);
globalThis.RndShakeCompoundInequality = bundle.deepBlurize(bundle.RndShakeCompoundInequality);
globalThis.RndShakeConstraint = bundle.deepBlurize(bundle.RndShakeConstraint);
globalThis.RndShakeConstraints = bundle.deepBlurize(bundle.RndShakeConstraints);
globalThis.RndShakeG = bundle.deepBlurize(bundle.RndShakeG);
globalThis.RndShakeIneq = bundle.deepBlurize(bundle.RndShakeIneq);
globalThis.RndShakeN = bundle.deepBlurize(bundle.RndShakeN);
globalThis.RndShakePoint = bundle.deepBlurize(bundle.RndShakePoint);
globalThis.RndShakePointPolar = bundle.deepBlurize(bundle.RndShakePointPolar);
globalThis.RndShakeQ = bundle.deepBlurize(bundle.RndShakeQ);
globalThis.RndShakeQuantity = bundle.deepBlurize(bundle.RndShakeQuantity);
globalThis.RndShakeR = bundle.deepBlurize(bundle.RndShakeR);
globalThis.RndShakeRatio = bundle.deepBlurize(bundle.RndShakeRatio);
globalThis.RndShakeTrig = bundle.deepBlurize(bundle.RndShakeTrig);
globalThis.RndShakeTrigValue = bundle.deepBlurize(bundle.RndShakeTrigValue);
globalThis.RndShe = bundle.deepBlurize(bundle.RndShe);
globalThis.RndShuffle = bundle.deepBlurize(bundle.RndShuffle);
globalThis.RndT = bundle.deepBlurize(bundle.RndT);
globalThis.RndTriangle = bundle.deepBlurize(bundle.RndTriangle);
globalThis.RndTrigEqv = bundle.deepBlurize(bundle.RndTrigEqv);
globalThis.RndTrigValue = bundle.deepBlurize(bundle.RndTrigValue);
globalThis.RndU = bundle.deepBlurize(bundle.RndU);
globalThis.RndZ = bundle.deepBlurize(bundle.RndZ);
globalThis.RndZs = bundle.deepBlurize(bundle.RndZs);
globalThis.Rng = bundle.deepBlurize(bundle.Rng);
globalThis.Rotate = bundle.deepBlurize(bundle.Rotate);
globalThis.Round = bundle.deepBlurize(bundle.Round);
globalThis.RoundDown = bundle.deepBlurize(bundle.RoundDown);
globalThis.RoundUp = bundle.deepBlurize(bundle.RoundUp);
globalThis.ScaleCentroidToInt = bundle.deepBlurize(bundle.ScaleCentroidToInt);
globalThis.ScaleCircumcentreToInt = bundle.deepBlurize(bundle.ScaleCircumcentreToInt);
globalThis.ScaleIncentreToInt = bundle.deepBlurize(bundle.ScaleIncentreToInt);
globalThis.ScaleOrthocentreToInt = bundle.deepBlurize(bundle.ScaleOrthocentreToInt);
globalThis.ScaleTo = bundle.deepBlurize(bundle.ScaleTo);
globalThis.Sci = bundle.deepBlurize(bundle.Sci);
globalThis.SectorArea = bundle.deepBlurize(bundle.SectorArea);
globalThis.ShakeBase = bundle.deepBlurize(bundle.ShakeBase);
globalThis.ShakeCompoundInequality = bundle.deepBlurize(bundle.ShakeCompoundInequality);
globalThis.ShakeConstraint = bundle.deepBlurize(bundle.ShakeConstraint);
globalThis.ShakeConstraints = bundle.deepBlurize(bundle.ShakeConstraints);
globalThis.ShakeG = bundle.deepBlurize(bundle.ShakeG);
globalThis.ShakeIneq = bundle.deepBlurize(bundle.ShakeIneq);
globalThis.ShakeN = bundle.deepBlurize(bundle.ShakeN);
globalThis.ShakePoint = bundle.deepBlurize(bundle.ShakePoint);
globalThis.ShakePointPolar = bundle.deepBlurize(bundle.ShakePointPolar);
globalThis.ShakeQ = bundle.deepBlurize(bundle.ShakeQ);
globalThis.ShakeQuantity = bundle.deepBlurize(bundle.ShakeQuantity);
globalThis.ShakeR = bundle.deepBlurize(bundle.ShakeR);
globalThis.ShakeRatio = bundle.deepBlurize(bundle.ShakeRatio);
globalThis.ShakeTrigValue = bundle.deepBlurize(bundle.ShakeTrigValue);
globalThis.ShortDivision = bundle.deepBlurize(bundle.ShortDivision);
globalThis.SigFig = bundle.deepBlurize(bundle.SigFig);
globalThis.Sign = bundle.deepBlurize(bundle.Sign);
globalThis.SineLawAngle = bundle.deepBlurize(bundle.SineLawAngle);
globalThis.SineLawLength = bundle.deepBlurize(bundle.SineLawLength);
globalThis.Slide = bundle.deepBlurize(bundle.Slide);
globalThis.Slide3D = bundle.deepBlurize(bundle.Slide3D);
globalThis.Slope = bundle.deepBlurize(bundle.Slope);
globalThis.SlopePd = bundle.deepBlurize(bundle.SlopePd);
globalThis.SolveAAS = bundle.deepBlurize(bundle.SolveAAS);
globalThis.SolveASA = bundle.deepBlurize(bundle.SolveASA);
globalThis.SolveSAS = bundle.deepBlurize(bundle.SolveSAS);
globalThis.SolveSSA = bundle.deepBlurize(bundle.SolveSSA);
globalThis.SolveSSS = bundle.deepBlurize(bundle.SolveSSS);
globalThis.SolveTriangle = bundle.deepBlurize(bundle.SolveTriangle);
globalThis.Sort = bundle.deepBlurize(bundle.Sort);
globalThis.SortBy = bundle.deepBlurize(bundle.SortBy);
globalThis.Sqrt = bundle.deepBlurize(bundle.Sqrt);
globalThis.StatRange = bundle.deepBlurize(bundle.StatRange);
globalThis.StdDev = bundle.deepBlurize(bundle.StdDev);
globalThis.StemAndLeaf = bundle.deepBlurize(bundle.StemAndLeaf);
globalThis.Sum = bundle.deepBlurize(bundle.Sum);
globalThis.Summary = bundle.deepBlurize(bundle.Summary);
globalThis.Table = bundle.deepBlurize(bundle.Table);
globalThis.ToBase = bundle.deepBlurize(bundle.ToBase);
globalThis.ToFrac = bundle.deepBlurize(bundle.ToFrac);
globalThis.TransformFunc = bundle.deepBlurize(bundle.TransformFunc);
globalThis.TriangleFromPoint = bundle.deepBlurize(bundle.TriangleFromPoint);
globalThis.TriangleFromVertex = bundle.deepBlurize(bundle.TriangleFromVertex);
globalThis.TrigSolve = bundle.deepBlurize(bundle.TrigSolve);
globalThis.UniMode = bundle.deepBlurize(bundle.UniMode);
globalThis.UpperQ = bundle.deepBlurize(bundle.UpperQ);
globalThis.UpperQAt = bundle.deepBlurize(bundle.UpperQAt);
globalThis.VecAdd = bundle.deepBlurize(bundle.VecAdd);
globalThis.VecAdd3D = bundle.deepBlurize(bundle.VecAdd3D);
globalThis.WholeBearing = bundle.deepBlurize(bundle.WholeBearing);
globalThis.ZScore = bundle.deepBlurize(bundle.ZScore);
globalThis.arccos = bundle.deepBlurize(bundle.arccos);
globalThis.arcsin = bundle.deepBlurize(bundle.arcsin);
globalThis.arctan = bundle.deepBlurize(bundle.arctan);
globalThis.cos = bundle.deepBlurize(bundle.cos);
globalThis.deepBlurize = bundle.deepBlurize(bundle.deepBlurize);
globalThis.differentiate = bundle.deepBlurize(bundle.differentiate);
globalThis.functionize = bundle.deepBlurize(bundle.functionize);
globalThis.getMaxDeg = bundle.deepBlurize(bundle.getMaxDeg);
globalThis.integrate = bundle.deepBlurize(bundle.integrate);
globalThis.isConstrained = bundle.deepBlurize(bundle.isConstrained);
globalThis.isLooseConstrained = bundle.deepBlurize(bundle.isLooseConstrained);
globalThis.log = bundle.deepBlurize(bundle.log);
globalThis.nCr = bundle.deepBlurize(bundle.nCr);
globalThis.nPr = bundle.deepBlurize(bundle.nPr);
globalThis.sin = bundle.deepBlurize(bundle.sin);
globalThis.tan = bundle.deepBlurize(bundle.tan);
globalThis.xPolynomial = bundle.deepBlurize(bundle.xPolynomial);
