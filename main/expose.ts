//@ts-ignore
import * as bundle from './build_bundle/Math/bundle.js' // build by task
import fs from 'fs'

const path = './src/Math/index.ts'

fs.readFile(path, 'utf8', (err, data) => {
    if (err) return console.log(err)
    data = '// This file is auto-generated by expose.ts\n\n'
    data += "import * as bundle from './bundle.js'\n\n"
    data += 'declare global {\n'
    for (let key in bundle) {
        if (key === 'default') continue
        data += `    var ${key}: typeof bundle.${key}\n`
    }
    data += '}\n\n'

    for (let key in bundle) {
        if (key === 'default') continue
        if (typeof bundle[key] === 'function') {
            data += `globalThis.${key} = bundle.deepBlurize(bundle.${key})\n`
        } else {
            data += `globalThis.${key} = bundle.${key}\n`
        }
    }
    data += '\n'

    fs.writeFile(path, data, 'utf8', err => {
        if (err) return console.log(err)
    })
})

fs.rmSync('./build_bundle', { recursive: true, force: true })
